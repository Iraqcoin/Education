<!doctype html>
<html class="no-js" lang="en" ng-app="main-app">
   <head>
      <meta charset="utf-8">
      <meta http-equiv="x-ua-compatible" content="ie=edge">
      <title> ModularAdmin - Free Dashboard Theme | HTML Version </title>
      <meta name="description" content="">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link rel="apple-touch-icon" href="apple-touch-icon.png">
      <!-- Place favicon.ico in the root directory -->
      <link rel="stylesheet" href="{{static_domain}}/admin/css/vendor.css">
      <!-- Theme initialization -->
      <script>
         var themeSettings = (localStorage.getItem('themeSettings')) ? JSON.parse(localStorage.getItem('themeSettings')) :
         {};
         var themeName = themeSettings.themeName || '';
         if (themeName)
         {
             document.write('<link rel="stylesheet" id="theme-style" href="{{static_domain}}/admin/css/app-' + themeName + '.css">');
         }
         else
         {
             document.write('<link rel="stylesheet" id="theme-style" href="{{static_domain}}/admin/css/app.css">');
         }
      </script>
   </head>
   <body>
      <div class="main-wrapper" ng-controller="wrapperCtr">
         <div class="app" id="app">
            <header class="header">
               <div class="header-block header-block-collapse hidden-lg-up"> <button class="collapse-btn" id="sidebar-collapse-btn">
                  <i class="fa fa-bars"></i>
                  </button> 
               </div>
               <div class="header-block header-block-search hidden-sm-down">
                  <form role="search">
                     <div class="input-container">
                        <i class="fa fa-search"></i> <input type="search" placeholder="Search">
                        <div class="underline"></div>
                     </div>
                  </form>
               </div>
               <div class="header-block header-block-buttons">
               </div>
               <div class="header-block header-block-nav">
                  <ul class="nav-profile">
                     <li class="notifications new">
                        <a href="" data-toggle="dropdown"> <i class="fa fa-bell-o"></i> <sup>
                        <span class="counter">8</span>
                        </sup> </a>
                        <div class="dropdown-menu notifications-dropdown-menu">
                           <ul class="notifications-container">
                              <li>
                                 <a href="" class="notification-item">
                                    <div class="img-col">
                                       <div class="img" style="background-image: url('{{static_domain}}/admin/assets/faces/3.jpg')"></div>
                                    </div>
                                    <div class="body-col">
                                       <p> <span class="accent">Zack Alien</span> pushed new commit: <span class="accent">Fix page load performance issue</span>. </p>
                                    </div>
                                 </a>
                              </li>
                              <li>
                                 <a href="" class="notification-item">
                                    <div class="img-col">
                                       <div class="img" style="background-image: url('{{static_domain}}/admin/assets/faces/5.jpg')"></div>
                                    </div>
                                    <div class="body-col">
                                       <p> <span class="accent">Amaya Hatsumi</span> started new task: <span class="accent">Dashboard UI design.</span>. </p>
                                    </div>
                                 </a>
                              </li>
                              <li>
                                 <a href="" class="notification-item">
                                    <div class="img-col">
                                       <div class="img" style="background-image: url('assets/faces/8.jpg')"></div>
                                    </div>
                                    <div class="body-col">
                                       <p> <span class="accent">Andy Nouman</span> deployed new version of <span class="accent">NodeJS REST Api V3</span> </p>
                                    </div>
                                 </a>
                              </li>
                           </ul>
                           <footer>
                              <ul>
                                 <li> <a href="">
                                    View All
                                    </a> 
                                 </li>
                              </ul>
                           </footer>
                        </div>
                     </li>
                     <li class="profile dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                           <div class="img" style="background-image: url('https://avatars3.githubusercontent.com/u/3959008?v=3&s=40')"> </div>
                           <span class="name">
                           John Doe
                           </span> 
                        </a>
                        <div class="dropdown-menu profile-dropdown-menu" aria-labelledby="dropdownMenu1">
                           <a class="dropdown-item" href="#"> <i class="fa fa-user icon"></i> Profile </a>
                           <a class="dropdown-item" href="#"> <i class="fa fa-bell icon"></i> Notifications </a>
                           <a class="dropdown-item" href="#"> <i class="fa fa-gear icon"></i> Settings </a>
                           <div class="dropdown-divider"></div>
                           <a class="dropdown-item" href="login.html"> <i class="fa fa-power-off icon"></i> Logout </a>
                        </div>
                     </li>
                  </ul>
               </div>
            </header>
            <aside class="sidebar">
               <div class="sidebar-container">
                  <div class="sidebar-header">
                     <div class="brand">
                        <div class="logo"> <span class="l l1"></span> <span class="l l2"></span> <span class="l l3"></span> <span class="l l4"></span> <span class="l l5"></span> </div>
                        Codeschool Admin 
                     </div>
                  </div>
                  <nav class="menu">
                     <ul class="nav metismenu" id="sidebar-menu">

                        <li ng-class="{'active':rootSelected==0}">
                           <a href="#/"> <i class="fa fa-home"></i> Dashboard </a>
                        </li>
                        <li ng-class="{'active':rootSelected==1}">
                           <a href=""> <i class="fa fa-th-large"></i> Items Manager <i class="fa arrow"></i> </a>
                           <ul>
                              <li ng-repeat="metric in metrics[1].sub" ng-class="{'active':metric.isSelected}"> <a href="[[metric.url]]" ng-click="changeSelectedMenu(metric)">
                                 [[metric.name]]
                                 </a> 
                              </li>
                           </ul>
                        </li>
                        <li ng-class="{'active':rootSelected==2}">
                           <a href=""> <i class="fa fa-bar-chart"></i> Charts <i class="fa arrow"></i> </a>
                           <ul>
                              <li> <a href="#charts-flot">
                                 Flot Charts
                                 </a> 
                              </li>
                              <li> <a href="#charts-morris">
                                 Morris Charts
                                 </a> 
                              </li>
                           </ul>
                        </li>
                       
                      
                        <li ng-class="{'active':rootSelected==3}">
                           <a href=""> <i class="fa fa-file-text-o"></i> Pages <i class="fa arrow"></i> </a>
                           <ul>
                              <li> <a href="login.html">
                                 Login
                                 </a> 
                              </li>
                              <li> <a href="signup.html">
                                 Sign Up
                                 </a> 
                              </li>
                              <li> <a href="reset.html">
                                 Reset
                                 </a> 
                              </li>
                              <li> <a href="error-404.html">
                                 Error 404 App
                                 </a> 
                              </li>
                              <li> <a href="error-404-alt.html">
                                 Error 404 Global
                                 </a> 
                              </li>
                              <li> <a href="error-500.html">
                                 Error 500 App
                                 </a> 
                              </li>
                              <li> <a href="error-500-alt.html">
                                 Error 500 Global
                                 </a> 
                              </li>
                           </ul>
                        </li>
                        
                     </ul>
                  </nav>
               </div>
               <footer class="sidebar-footer">
                  <ul class="nav metismenu" id="customize-menu">
                     <li>
                        <ul>
                           <li class="customize">
                              <div class="customize-item">
                                 <div class="row customize-header">
                                    <div class="col-xs-4"> </div>
                                    <div class="col-xs-4"> <label class="title">fixed</label> </div>
                                    <div class="col-xs-4"> <label class="title">static</label> </div>
                                 </div>
                                 <div class="row hidden-md-down">
                                    <div class="col-xs-4"> <label class="title">Sidebar:</label> </div>
                                    <div class="col-xs-4"> <label>
                                       <input class="radio" type="radio" name="sidebarPosition" value="sidebar-fixed" >
                                       <span></span>
                                       </label> 
                                    </div>
                                    <div class="col-xs-4"> <label>
                                       <input class="radio" type="radio" name="sidebarPosition" value="">
                                       <span></span>
                                       </label> 
                                    </div>
                                 </div>
                                 <div class="row">
                                    <div class="col-xs-4"> <label class="title">Header:</label> </div>
                                    <div class="col-xs-4"> <label>
                                       <input class="radio" type="radio" name="headerPosition" value="header-fixed">
                                       <span></span>
                                       </label> 
                                    </div>
                                    <div class="col-xs-4"> <label>
                                       <input class="radio" type="radio" name="headerPosition" value="">
                                       <span></span>
                                       </label> 
                                    </div>
                                 </div>
                                 <div class="row">
                                    <div class="col-xs-4"> <label class="title">Footer:</label> </div>
                                    <div class="col-xs-4"> <label>
                                       <input class="radio" type="radio" name="footerPosition" value="footer-fixed">
                                       <span></span>
                                       </label> 
                                    </div>
                                    <div class="col-xs-4"> <label>
                                       <input class="radio" type="radio" name="footerPosition" value="">
                                       <span></span>
                                       </label> 
                                    </div>
                                 </div>
                              </div>
                              <div class="customize-item">
                                 <ul class="customize-colors">
                                    <li> <span class="color-item color-red" data-theme="red"></span> </li>
                                    <li> <span class="color-item color-orange" data-theme="orange"></span> </li>
                                    <li> <span class="color-item color-green" data-theme="green"></span> </li>
                                    <li> <span class="color-item color-seagreen" data-theme="seagreen"></span> </li>
                                    <li> <span class="color-item color-blue active" data-theme=""></span> </li>
                                    <li> <span class="color-item color-purple" data-theme="purple"></span> </li>
                                 </ul>
                              </div>
                           </li>
                        </ul>
                        <a href=""> <i class="fa fa-cog"></i> Customize </a>
                     </li>
                  </ul>
               </footer>
            </aside>
            <div class="sidebar-overlay" id="sidebar-overlay"></div>

            <div ng-view></div>

            <footer class="footer">
               <div class="footer-block buttons"> <iframe class="footer-github-btn" src="https://ghbtns.com/github-btn.html?user=modularcode&repo=modular-admin-html&type=star&count=true" frameborder="0" scrolling="0" width="140px" height="20px"></iframe> </div>
               <div class="footer-block author">
                  <ul>
                     <li> created by <a href="https://github.com/modularcode">ModularCode</a> </li>
                     <li> <a href="https://github.com/modularcode/modular-admin-html#get-in-touch">get in touch</a> </li>
                  </ul>
               </div>
            </footer>

            <div class="modal fade" id="modal-media">
               <div class="modal-dialog modal-lg">
                  <div class="modal-content">
                     <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        <span class="sr-only">Close</span>
                        </button>
                        <h4 class="modal-title">Media Library</h4>
                     </div>
                     <div class="modal-body modal-tab-container">
                        <ul class="nav nav-tabs modal-tabs" role="tablist">
                           <li class="nav-item"> <a class="nav-link" ng-class="{'active':isGallery}" href="" ng-click="clickGallery()">Gallery</a> </li>
                           <li class="nav-item"> <a class="nav-link active" ng-class="{'active':isGallery==false}" href="" ng-click="isGallery=false;">Upload</a> </li>
                        </ul>
                        <div class="tab-content modal-tab-content">
                           <div class="tab-pane fade" id="gallery" ng-class="{'active':isGallery}" role="tabpanel" ng-show="isGallery" style="opacity:1">
                              <div class="images-container">
                                 <div class="row" style="display: block;">
                                    <div class="col-xs-6 col-sm-4 col-md-4 col-lg-3" ng-repeat="img in images">

                                          <div ng-class="{'active':imageFake[$index].isSelected}" style="display: block;" class="image-container" ng-click="choseImage($index,img)">
                                             <div class="image" style="background-image:url('{{static_domain}}/image/[[img]]');margin:auto;width: 100px;height: 100px;"></div>
                                          </div>
                                          
                                    </div>
                                 </div>
                                 
                              </div>
                           </div>

                           <div class="tab-pane fade active in" id="upload" role="tabpanel" ng-hide="isGallery" ng-class="{'active':isGallery==false}">
                              <div class="upload-container">
                                 <div id="dropzone">
                                    <form action="/fileUpload" method="POST" enctype="multipart/form-data" class="dropzone needsclick dz-clickable" id="demo-upload">
                                       <div class="dz-message-block">
                                          <div class="dz-message needsclick"> Drop files here or click to upload. </div>
                                       </div>
                                    </form>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="modal-footer"> <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button> <button type="button" ng-show="isGallery" data-dismiss="modal" class="btn btn-primary" ng-click="applyImage()">Insert Selected</button> </div>
                  </div>
                  <!-- /.modal-content -->
               </div>
               <!-- /.modal-dialog -->
            </div>

            
            <!-- /.modal -->
            <div class="modal fade" id="confirm-modal">
               <div class="modal-dialog" role="document">
                  <div class="modal-content">
                     <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title"><i class="fa fa-warning"></i> Alert</h4>
                     </div>
                     <div class="modal-body">
                        <p>Are you sure want to do this?</p>
                     </div>
                     <div class="modal-footer"> <button type="button" class="btn btn-primary" data-dismiss="modal">Yes</button> <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button> </div>
                  </div>
                  <!-- /.modal-content -->
               </div>
               <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->
         </div>
      </div>
      <!-- Reference block for JS -->
      <div class="ref" id="ref">
         <div class="color-primary"></div>
         <div class="chart">
            <div class="color-primary"></div>
            <div class="color-secondary"></div>
         </div>
      </div>
       <script>
        var STATIC_DOMAIN = "{{static_domain}}";
      </script>
      <script src="{{static_domain}}/admin/js/vendor.js?v=3"></script>
      <script src="{{static_domain}}/admin/js/app.js?v=3"></script>
      <script type="text/javascript" src="{{static_domain}}/js/angular.min.js"></script>
      <script type="text/javascript" src="{{static_domain}}/js/angular-route.min.js"></script>
      <script type="text/javascript" src="{{static_domain}}/js/lodash.min.js"></script>

       <script src="http://cdn.tinymce.com/4/tinymce.min.js"></script>
     
      <script type="text/javascript">
         tinymce.init({ selector:'textarea.editor' });
         var app = angular.module('main-app', ['ngRoute']);
         app.config(function($interpolateProvider, $httpProvider) {
            $interpolateProvider.startSymbol('[[').endSymbol(']]');
            $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
            $httpProvider.defaults.transformRequest = function(obj) {
                var str = [];
                for (var p in obj) {
                    str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
                }
                return str.join("&");
            };
        });
         app.config(['$routeProvider',
            function($routeProvider) {
               $routeProvider.
                    when('/', {
                        templateUrl : '/static/admin/dashboard.html',
                        controller : 'adminDashboardCtr'
                    }).
                    when('/item/:id', {
                        templateUrl: '/static/admin/items-list.html',
                        controller : 'itemListCtr'
                    }).
                     when('/edit-item/:type/:id', {
                        templateUrl: '/static/admin/item-editor.html',
                        controller : 'editItemCtr'
                    }).
                     when('/charts-flot', {
                        templateUrl: '/static/admin/charts-flot.html',
                        controller : 'chartsFlotCtr'
                    }).
                     when('/charts-morris', {
                        templateUrl: '/static/admin/charts-morris.html',
                        controller : 'chartsMorrisCtr'
                    }).
                     when('/error-404', {
                        templateUrl: '/static/admin/error-404.html',
                        controller : 'errorCtr'
                    }).
                     when('/error-500', {
                        templateUrl: '/static/admin/error-500.html',
                        controller : 'errorCtr'
                    }).
                    otherwise({
                        redirectTo: '/'
                    });
        }]);
         app.controller('wrapperCtr', ['$scope','$rootScope','$http', function($scope,$rootScope,$http){
            $scope.metrics = [
               {id:1,name:"Dashboard",isSelected:true},
               {id:2,name:"Items Manager",isSelected:false,sub:[
                  {id:1,name:"Parent Category",isSelected:false,url:"#item/1"},
                  {id:2,name:"SubCategory",isSelected:false,url:"#item/2"},
                  {id:3,name:"Category",isSelected:false,url:"#item/3"},
                  {id:4,name:"Course",isSelected:false,url:"#item/4"},
                  {id:5,name:"Course Details",isSelected:false,url:"#item/5"}
               ]},

               {id:3,name:"Charts",isSelected:false,sub:[
                  {id:1,name:"Flot Charts",isSelected:false,url:"#charts-flot"},
                  {id:2,name:"Morris Charts",isSelected:false,url:"#charts-morris"}
               ]},
               {id:4,name:"Pages",isSelected:false}
            ];
            $scope.images = [];
            $rootScope.rootSelected = 0;
            $scope.changeSelectedMenu = function(metric){
               $rootScope.rootSelected = 1;
               for(var x in $scope.metrics[1].sub){
                  $scope.metrics[1].sub[x].isSelected = false;
               }
               metric.isSelected = true;
               return true;
            }
            $scope.isGallery = false;
            $scope.imagesSelected = [];
            $scope.imageFake = [];
            $scope.choseImage = function(index,img){
               console.log($scope.imageFake[index]);
               $scope.imageFake[index].isSelected = !$scope.imageFake[index].isSelected;
               console.log($scope.imageFake[index]);
               
               if($scope.imageFake[index].isSelected)
                  $scope.imagesSelected.push(img);
               else{
                  var index = $scope.imagesSelected.indexOf(img);
                  if(index >=0)
                    $scope.imagesSelected.splice(index, 1);  
               }
               console.log($scope.imagesSelected);
            }
            $scope.applyImage = function(){
               $scope.$broadcast('update_parent_controller', $scope.imagesSelected);
               $scope.imagesSelected = [];
               $scope.imageFake = [];
               $scope.isGallery = false;
            }
            $scope.clickGallery = function(){
               $scope.cacheAjax = {};
               $scope.getDataList();
               $scope.isGallery = true;
            }
            $scope.getDataList = function(){
               $scope.getJSON("{{domain}}/api?action=get-all-image-name" , function(data){
                    if(data){
                        $scope.images = data;
                        for(var x in data){
                           var obj = {id:x,name:data[x],isSelected:false};
                           $scope.imageFake.push(obj);
                        }
                    }
                }, function(error){
                    console.log(error);
                });
            }
            $scope.cacheAjax = {};
            $scope.getJSON = function (url, success , error) {
                //Get from cache
                if (typeof $scope.cacheAjax[url] != "undefined") {
                    //console.log("getfromCache");
                    success($scope.cacheAjax[url]);
                    return;
                }
                $http.get(url)
                    .success(function (data) {
                        if (typeof data !== "undefined") {
                            var tmp;
                            tmp = angular.copy(data, tmp);
                            $scope.cacheAjax[url] = tmp;
                            try {
                                success(data);
                            } catch (e) {
                                console.log("error");
                            }
                        }
                    }).error(function(){
                        console.log("Get JSON Ajax Fail: " + url);
                        error("Get JSON Ajax Fail: " + url);
                    });
            }//end GetJson
            $scope.getDataList();

         }]);
         app.controller('adminDashboardCtr', ['$scope','$rootScope', function($scope,$rootScope){
            $rootScope.rootSelected = 0;
            $rootScope.loadJS = function(file) {
                // DOM: Create the script element
                var jsElm = document.createElement("script");
                // set the type attribute
                jsElm.type = "application/javascript";
                // make the script element load file
                jsElm.src = file;
                // finally insert the element to the body element in order to load the script
                document.body.appendChild(jsElm);
            }
            $rootScope.loadJS(STATIC_DOMAIN + "/admin/js/app.js?v=3");
            $rootScope.loadJS(STATIC_DOMAIN + "/admin/js/vendor.js?v=3");
         }]);





         app.controller('itemListCtr', ['$scope','$rootScope','$routeParams','$http', function($scope,$rootScope,$routeParams,$http){
            $scope.isDropAction = false;
            $scope.metricSelect = [1,2,3,4];
            $scope.metricSelectedId = $routeParams.id ? $routeParams.id : 1;
            console.log($scope.metricSelectedId);
            $scope.currentPage = 1;
            $scope.dataReportShow = [];
            $scope.maxRow = 10;
            $scope.total = 0;
            $scope.listData = [];
            $scope.listCate = [];

            $scope.getActionName = function(_prefix){
               if($scope.metricSelectedId == 1)
                  return _prefix + "parent-category";
               else if($scope.metricSelectedId == 2)
                  return _prefix + "sub-category";
               else if($scope.metricSelectedId == 3)
                  return _prefix + "category";
               else if($scope.metricSelectedId == 4)
                  return _prefix + "course";
               else if($scope.metricSelectedId == 5)
                  return _prefix + "course-detail";
               else
                  return _prefix + "parent-category";
            }
            $scope.getDataCategory = function(){
               var action = "";
               if($scope.metricSelectedId == 1)
                  action = "get-all-parent-category";
               else if($scope.metricSelectedId == 2)
                  action = "get-all-parent-category";
               else if($scope.metricSelectedId == 3)
                  action = "get-all-sub-category";
               else if($scope.metricSelectedId == 4)
                  action = "get-all-category";
               else if($scope.metricSelectedId == 5)
                  action = "get-all-course";
               $scope.getJSON("{{domain}}/api?action=" + action , function(data){
                    if(data.data){
                        $scope.listCate = data.data;
                        console.log(data);
                        $scope.getDataList();
                    }
                }, function(error){
                    console.log(error);
               });
            }
            $scope.removeItem = function(id){
               //$('#confirm-modal').show();
               console.log($scope.getActionName('delete-') + "__" + id);
               var request = $http({
                     method : "post",
                     url : "{{domain}}/api?action=" + $scope.getActionName('delete-'),
                     params: { id : id}
               });
               request.success(function(data) {
                  if(data){
                     if(data.error >= 0)
                        alert("Success");
                  }
               });
            }
            $scope.getParentCategory = function(id){
               for(var x in $scope.listCate){
                  if($scope.listCate[x].id == id)
                     return $scope.listCate[x].name;
               }
               return "root";
            }
            $scope.getDataList = function(){
               $scope.showLoading = true;
               var action = $scope.getActionName("get-");
               $scope.getJSON("{{domain}}/api?action=" + action + "&page=" + $scope.currentPage + "&admin=1" , function(data){
                    if(data.data){
                        $scope.listData = data.data;
                        $scope.total = data.total;
                        console.log(data);
                    }
                    $scope.getDataReportShowed();
                    $scope.showLoading = false;
                }, function(error){
                    console.log(error);
                });
            }
            $scope.showEdit = function(data){
               console.log("showEdit");
               data.active = !data.active;
            }

            $scope.getDataReportShowed = function() {
                $scope.getMaxPage();
                $scope.dataReportShow = [];
                var i = 0;
                for (; i < $scope.listData.length; i++) {
                    $scope.dataReportShow.push($scope.listData[i]);
                }
            }
            $scope.getMaxPage = function() {
                var max;
                max = Math.ceil($scope.total / $scope.maxRow);
                $scope.maxPage = max;
                $scope.arrPage = [];
                for(var i = 0 ; i < $scope.maxPage ; i++){
                    $scope.arrPage.push(i + 1);
                    if(i > 10)
                        break;
                }
                console.log($scope.arrPage);
            }
            $scope.nextPage = function() {
             if ($scope.currentPage < $scope.maxPage) {
                    $scope.currentPage++;
                    $scope.changePage();
                }
            }
            $scope.prevPage = function() {
                if ($scope.currentPage > 1) {
                    $scope.currentPage--;
                    $scope.changePage();
                }
            }
            $scope.changePage = function(i){
                console.log("changePage");  
                if(i != undefined && i > 0)
                    $scope.currentPage = i;
                $scope.getDataList();
                return false;
            }

            $scope.cacheAjax = {};
            $scope.getJSON = function (url, success , error) {
                //Get from cache
                if (typeof $scope.cacheAjax[url] != "undefined") {
                    //console.log("getfromCache");
                    success($scope.cacheAjax[url]);
                    return;
                }
                $http.get(url)
                    .success(function (data) {
                        if (typeof data !== "undefined") {
                            var tmp;
                            tmp = angular.copy(data, tmp);
                            $scope.cacheAjax[url] = tmp;
                            try {
                                success(data);
                            } catch (e) {
                                console.log("error");
                            }
                        }
                    }).error(function(){
                        console.log("Get JSON Ajax Fail: " + url);
                        error("Get JSON Ajax Fail: " + url);
                    });
            }//end GetJson
            $scope.getDataCategory();
      
            $rootScope.loadJS(STATIC_DOMAIN + "/admin/js/app.js?v=2");
         }]);


         app.controller('editItemCtr', ['$scope','$rootScope','$routeParams','$http', function($scope,$rootScope,$routeParams,$http){
            
            $scope.type = $routeParams.type ? $routeParams.type : 1;
            $scope.id = $routeParams.id ? $routeParams.id : 0;
            $scope.itemSelected = {};
            $scope.relatedCourse = [];
            $scope.listTags = [];
            $scope.listTagSelected = [];
            $scope.listRLCourseSelected = [];

            $scope.updateVideo = false;
            $scope.updateTutorial = false;
            $scope.createVideo = false;
            $scope.createTutorial = false;
            $scope.detail = {};
            $scope.detailUpdate = false;

            $scope.$on("update_parent_controller", function(event, message) {
               $scope.itemSelected.link_icon = STATIC_DOMAIN + "/image/" + message[0];
               if(message.length >=2)
                  $scope.itemSelected.link_image_bgr = STATIC_DOMAIN + "/image/" + message[1];
               console.log($scope.itemSelected);
            });
            $scope.showBox = function(i,j){
               if(i == 0 ){
                  $scope.createVideo = true;
                  $scope.createTutorial = false;
               }else if(i == 1){
                  $scope.createVideo = false;
                  $scope.createTutorial = true;
               }
               if(j == 0){
                  $scope.detail = {};
                  $scope.detailUpdate = false;
               }
               else if(j == 1 && i == 0)
                  $scope.detail = $scope.itemSelected.video;
               else if(j == 1 && i == 1)
                  $scope.detail = $scope.itemSelected.tutorial;
               if($scope.detail > 0){
                  $scope.detailUpdate = true;
                  var tmp;
                  if(i == 0)
                     tmp = $scope.listVideo;
                  if(i == 1)
                     tmp = $scope.listTutorial;
                  for(var x in tmp){
                     if(tmp[x].id == $scope.detail)
                        $scope.detail = tmp[x];
                  }
               }
               console.log($scope.detail);
            }
            $scope.$watch('detail.content', function (newValue) {
               console.log('detail.content');
               console.log($scope.detail.content);
               if($scope.detail.content != undefined && $scope.detail.content != "")
                  tinymce.get('main-editor').setContent($scope.detail.content);
            });
            $scope.getDataCategory = function(){
               var action = "";
               if($scope.type == 1)
                  action = "get-all-parent-category";
               else if($scope.type == 2)
                  action = "get-all-parent-category";
               else if($scope.type == 3)
                  action = "get-all-sub-category";
               else if($scope.type == 4){
                  action = "get-all-category";
               }
               else if($scope.type == 5)
                  action = "get-all-course";
               $scope.getJSON("{{domain}}/api?action=" + action , function(data){
                    if(data.data){
                        $scope.listCate = data.data;
                        if($scope.type == 4){ 
                           $scope.getJSON("{{domain}}/api?action=get-all-course" , function(data1){
                             if(data1.data){
                                 $scope.relatedCourse = data1.data;
                                 $scope.getJSON("{{domain}}/api?action=get-all-tags" , function(data2){
                                    if(data2.data){
                                       $scope.listTags = data2.data;
                                       $scope.getItem(); 

                                    }
                                 }, function(error){
                                      console.log(error);
                                 });
                             }
                            }, function(error){
                                console.log(error);
                           });
                        }else{
                           $scope.getItem();
                        }
                    }
                }, function(error){
                    console.log(error);
               });
            }
            $scope.getTagName = function(id){
               for(var x in $scope.listTags){
                  if($scope.listTags[x].id == id)
                     return $scope.listTags[x].name;
               }
            }
            $scope.addTagItem = function(type,id){
               id = id + "";
               console.log(id);
               console.log($scope.listTagSelected);
               if(type == 0){
                  if($scope.listTagSelected.indexOf(id) < 0)
                     $scope.listTagSelected.push(id);
               }
               else if(type == 1) {// course
                  if($scope.listRLCourseSelected.indexOf(id) < 0)
                     $scope.listRLCourseSelected.push(id);
               }
            }
            $scope.removeSelected = function(type,value){
               value = value + "";
               if(type == 0) {// tag
                  var index = $scope.listTagSelected.indexOf(value);
                  if(index >=0)
                     $scope.listTagSelected.splice(index, 1);  
               }
               else if(type == 1) {// course
                  var index = $scope.listRLCourseSelected.indexOf(value);
                  if(index >=0)
                     $scope.listRLCourseSelected.splice(index, 1);  
               }
            }
            $scope.getActionName = function(){
               if($scope.type == 1)
                  return "unique-parent-category";
               else if($scope.type == 2)
                  return "unique-sub-category";
               else if($scope.type == 3)
                  return "unique-category";
               else if($scope.type == 4)
                  return "unique-course";
               else if($scope.type == 5)
                  return "unique-course-detail";
               else
                  return "unique-parent-category";
            }
            $scope.getItem = function(){
               var action = $scope.getActionName();
               if($scope.id != 0){
                  $scope.getJSON("{{domain}}/api?action=" + action + "&id=" + $scope.id , function(data){
                    if(data.data){
                        var tmp;
                        tmp = angular.copy(data, tmp);
                        $scope.itemSelected = data.data[0];
                        if($scope.type == 4){
                           $scope.listTagSelected = $scope.convertData(tmp.data[0].tag_id,undefined);
                           $scope.listRLCourseSelected = $scope.convertData(tmp.data[0].related_course_id,undefined);
                        }
                        if($scope.type == 5){
                           $scope.itemSelected.level = $scope.itemSelected.level + "";
                        }
                     }
                   }, function(error){
                       console.log(error);
                  });
               }
               else
                  $scope.itemSelected = {};
            }
            $scope.submitItem = function(){
               var getAction = function(){
                  var action = "";
                  if($scope.type == 1)
                     action = "parent-category";
                  else if($scope.type == 2)
                     action = "sub-category";
                  else if($scope.type == 3)
                     action = "category";
                  else if($scope.type == 4)
                     action = "course";
                  else if($scope.type == 5)
                     action = "course-detail";
                  return action;
               }
               var pre_fix = "post-";
               if($scope.id != 0){ // update
                  pre_fix = "update-";
               }
               pre_fix = pre_fix + getAction();
               if($scope.type == 4){
                  $scope.itemSelected.tag_id = $scope.convertData(undefined,$scope.listTagSelected);
                  $scope.itemSelected.related_course_id = $scope.convertData(undefined,$scope.listRLCourseSelected);
               }

               console.log($scope.itemSelected);
               var request = $http({
                     method : "post",
                     url : "{{domain}}/api?action=" + pre_fix,
                     params: { data : $scope.itemSelected}
               });
               request.success(function(data) {
                  if(data){
                     if(data.error >= 0)
                        alert("Success");
                  }
               });
            }
            $scope.convertData = function(string,array){
                if(string != undefined){
                    var array = string.split(",");
                    return array;
                }
                else if(array != undefined){
                    return array.join(",");
                }
            }
            $scope.listVideo = [];
            $scope.listTutorial = [];
            $scope.changeSelected = function(i){
               if(i == 0){
                  if($scope.itemSelected.video!="" && $scope.itemSelected.video > 0){
                     $scope.updateVideo = true;
                  }else{
                     $scope.updateVideo = false;
                  }
               }else{
                  if($scope.itemSelected.tutorial!="" && $scope.itemSelected.tutorial > 0){
                     $scope.updateTutorial = true;
                  }else{
                     $scope.updateTutorial = false;
                  }
               }
            }
            $scope.backDetail = function(){
               $scope.createVideo = false;
               $scope.createTutorial = false;
               $scope.detail = {};
               $scope.cacheAjax = {};
               $scope.getDetails();
            }
            $scope.submitDetail = function(type){
               console.log(tinymce.get('main-editor').getContent());
               var tmp = 0;
               if($scope.detail.link != undefined && $scope.detail.link != "" && $scope.detail.link.length > 10){
                  tmp = 1;
               }else{
                  $scope.detail.content = tinymce.get('main-editor').getContent();
               }
               if($scope.detail.content != undefined && $scope.detail.content != ""){ 
                  tmp = 2;
               }
               $scope.detail.type = tmp;
               $scope.detail.course_detail_id = $scope.id;

               console.log($scope.detail);
               var request = $http({
                        method : "post",
                        url : "{{domain}}/api?action=post-detail",
                        params: { data : $scope.detail,type:type,link:tmp}
               });
               request.success(function(data) {
                  if(data){
                     if(data.error >=0)
                        alert("Success");
                  }
               });
            }
            $scope.getDetails = function(){
               $scope.listVideo = [];
               $scope.listTutorial = [];
               if($scope.type == 5){
                  if($scope.id != 0){
                     console.log("get list detail");
                     $scope.getJSON("{{domain}}/api?action=get-detail&page=1&maxRow=100&parentID=" + $scope.id , function(data){
                       if(data.data){
                           var tmp = data.data;
                           for(var x in tmp){
                              if(tmp[x].type == 1)
                                 $scope.listVideo.push(tmp[x]);
                              else if(tmp[x].type == 2)
                                 $scope.listTutorial.push(tmp[x]);
                           }
                        }
                      }, function(error){
                          console.log(error);
                     });
                  }
               }
            }
            $scope.cacheAjax = {};
            $scope.getJSON = function (url, success , error) {
                //Get from cache
                if (typeof $scope.cacheAjax[url] != "undefined") {
                    //console.log("getfromCache");
                    success($scope.cacheAjax[url]);
                    return;
                }
                $http.get(url)
                    .success(function (data) {
                        if (typeof data !== "undefined") {
                            var tmp;
                            tmp = angular.copy(data, tmp);
                            $scope.cacheAjax[url] = tmp;
                            try {
                                success(data);
                            } catch (e) {
                                console.log("error");
                            }
                        }
                    }).error(function(){
                        console.log("Get JSON Ajax Fail: " + url);
                        error("Get JSON Ajax Fail: " + url);
                    });
            }//end GetJson
            $scope.getDataCategory();
            $scope.getDetails();

            $scope.$on('$destroy', function() {
             var tinyInstance = tinymce.get('main-editor');
                if (tinyInstance) {
                  tinyInstance.remove();
                  tinyInstance = null;
                }
            });
         

            tinymce.init({
              selector: 'textarea.editor',
              height: 500,
              theme: 'modern',
              plugins: [
                'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                'searchreplace wordcount visualblocks visualchars code fullscreen',
                'insertdatetime media nonbreaking save table contextmenu directionality',
                'emoticons template paste textcolor colorpicker textpattern imagetools'
              ],
              toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
              toolbar2: 'print preview media | forecolor backcolor emoticons',
              image_advtab: true,
              templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
              ],
              content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css'
              ]
             });

         }]);




         app.controller('chartsFlotCtr', ['$scope','$rootScope', function($scope,$rootScope){
            function loadJS(file) {
                // DOM: Create the script element
                var jsElm = document.createElement("script");
                // set the type attribute
                jsElm.type = "application/javascript";
                // make the script element load file
                jsElm.src = file;
                // finally insert the element to the body element in order to load the script
                document.body.appendChild(jsElm);
            }
            loadJS(STATIC_DOMAIN + "/admin/js/app.js?v=2");
            loadJS(STATIC_DOMAIN + "/admin/js/vendor.js?v=2");
         }]);

         app.controller('chartsMorrisCtr', ['$scope','$rootScope', function($scope,$rootScope){
            
         }]);

         app.controller('errorCtr', ['$scope','$rootScope', function($scope,$rootScope){
            
         }]);

      </script>
   </body>
</html>